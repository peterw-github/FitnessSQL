SQL> 
SQL> 
SQL> DROP TABLE assessment CASCADE CONSTRAINTS;

Table ASSESSMENT dropped.

SQL> 
SQL> DROP TABLE centre CASCADE CONSTRAINTS;

Table CENTRE dropped.

SQL> 
SQL> DROP TABLE class CASCADE CONSTRAINTS;

Table CLASS dropped.

SQL> 
SQL> DROP TABLE class_category CASCADE CONSTRAINTS;

Table CLASS_CATEGORY dropped.

SQL> 
SQL> DROP TABLE class_member CASCADE CONSTRAINTS;

Table CLASS_MEMBER dropped.

SQL> 
SQL> DROP TABLE class_staff CASCADE CONSTRAINTS;

Table CLASS_STAFF dropped.

SQL> 
SQL> DROP TABLE facility CASCADE CONSTRAINTS;

Table FACILITY dropped.

SQL> 
SQL> DROP TABLE member CASCADE CONSTRAINTS;

Table MEMBER dropped.

SQL> 
SQL> DROP TABLE session_attendance CASCADE CONSTRAINTS;

Table SESSION_ATTENDANCE dropped.

SQL> 
SQL> DROP TABLE staff CASCADE CONSTRAINTS;

Table STAFF dropped.

SQL> 
SQL> -- predefined type, no DDL - MDSYS.SDO_GEOMETRY
SQL> 
SQL> -- predefined type, no DDL - XMLTYPE
SQL> 
SQL> CREATE TABLE assessment (
  2      member_num        NUMBER(7) NOT NULL,
  3      assess_date       DATE NOT NULL,
  4      assess_weight     NUMBER(7) NOT NULL,
  5      assess_systolic   NUMBER(7) NOT NULL,
  6      assess_diastolic  NUMBER(7) NOT NULL,
  7      assess_bmi        NUMBER(7) NOT NULL,
  8      assess_v02max     NUMBER(7) NOT NULL,
  9      staff_id          NUMBER(7) NOT NULL
 10  );

Table ASSESSMENT created.

SQL> 
SQL> COMMENT ON COLUMN assessment.member_num IS
  2      'The identification number of a member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessment.assess_date IS
  2      'The date the assessment occurred.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessment.assess_weight IS
  2      'The weight of the assessed member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessment.assess_systolic IS
  2      'The systolic blood pressure of the assessed member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessment.assess_diastolic IS
  2      'The diastolic blood pressure of the assessed member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessment.assess_bmi IS
  2      'The BMI of the assessed member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessment.assess_v02max IS
  2      'The v02 max  of the assessed member (the maximum rate of oxygen consumption, while engaging in intensifying exercise)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN assessment.staff_id IS
  2      'The identification number of a staff member';

Comment created.

SQL> 
SQL> ALTER TABLE assessment ADD CONSTRAINT assessment_pk PRIMARY KEY ( member_num,
  2                                                                    assess_date );

Table ASSESSMENT altered.

SQL> 
SQL> CREATE TABLE centre (
  2      centre_id        NUMBER(7) NOT NULL,
  3      centre_name      VARCHAR2(50) NOT NULL,
  4      centre_street    VARCHAR2(25) NOT NULL,
  5      centre_town      VARCHAR2(30) NOT NULL,
  6      centre_postcode  VARCHAR2(15) NOT NULL,
  7      centre_phone     VARCHAR2(15) NOT NULL
  8  );

Table CENTRE created.

SQL> 
SQL> COMMENT ON COLUMN centre.centre_id IS
  2      'The identification number that uniquely identifies the fitness centre';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN centre.centre_name IS
  2      'The name of the fitness centre ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN centre.centre_street IS
  2      'The street that the fitness centre is on';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN centre.centre_town IS
  2      'The town the fitness centre is in';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN centre.centre_postcode IS
  2      'The postcode of the fitness centre';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN centre.centre_phone IS
  2      'The phone number of the fitness centre';

Comment created.

SQL> 
SQL> ALTER TABLE centre ADD CONSTRAINT centre_pk PRIMARY KEY ( centre_id );

Table CENTRE altered.

SQL> 
SQL> CREATE TABLE class (
  2      class_num        NUMBER(7) NOT NULL,
  3      centre_id        NUMBER(7) NOT NULL,
  4      class_type       VARCHAR2(25) NOT NULL,
  5      class_desc       VARCHAR2(75) NOT NULL,
  6      class_duration   NUMBER(4) NOT NULL,
  7      class_startdate  DATE,
  8      class_max        NUMBER(4) NOT NULL,
  9      class_sessions   NUMBER(3) NOT NULL,
 10      class_cost       NUMBER(7, 2) NOT NULL,
 11      class_gender     VARCHAR2(25) NOT NULL,
 12      fac_roomnum      NUMBER(7) NOT NULL,
 13      class_typeid     NUMBER(7) NOT NULL
 14  );

Table CLASS created.

SQL> 
SQL> COMMENT ON COLUMN class.class_num IS
  2      'The identification number of a class (not unique between centres)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class.centre_id IS
  2      'The identification number that uniquely identifies the fitness centre';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class.class_type IS
  2      'The type/category that the class falls into.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class.class_desc IS
  2      'The description of the class';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class.class_duration IS
  2      'The duration of the class (in minutes)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class.class_startdate IS
  2      'The date and time of the start of the first session of the class ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class.class_max IS
  2      'The maximum number of people that can participate in a class';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class.class_sessions IS
  2      'The total number of sessions that a class has';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class.class_cost IS
  2      'The cost of the class to a member (sessions cannot be bought individually)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class.class_gender IS
  2      'States which gender the class is exclusive to, can only be:
  3  Female
  4  Male
  5  Unrestricted
  6  Unknown
  7  ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class.fac_roomnum IS
  2      'The room number of the facility';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class.class_typeid IS
  2      'The identification number of the class type';

Comment created.

SQL> 
SQL> ALTER TABLE class ADD CONSTRAINT class_pk PRIMARY KEY ( centre_id,
  2                                                          class_num );

Table CLASS altered.

SQL> 
SQL> CREATE TABLE class_category (
  2      class_typeid  NUMBER(7) NOT NULL,
  3      class_type    VARCHAR2(25) NOT NULL
  4  );

Table CLASS_CATEGORY created.

SQL> 
SQL> COMMENT ON COLUMN class_category.class_typeid IS
  2      'The identification number of the class type';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class_category.class_type IS
  2      'The name of the type of class';

Comment created.

SQL> 
SQL> ALTER TABLE class_category ADD CONSTRAINT class_category_pk PRIMARY KEY ( class_typeid );

Table CLASS_CATEGORY altered.

SQL> 
SQL> CREATE TABLE class_member (
  2      member_num            NUMBER(7) NOT NULL,
  3      centre_id             NUMBER(7) NOT NULL,
  4      class_num             NUMBER(7) NOT NULL,
  5      classmem_paydate      DATE NOT NULL,
  6      classmem_totalattend  NUMBER(4) NOT NULL
  7  );

Table CLASS_MEMBER created.

SQL> 
SQL> COMMENT ON COLUMN class_member.member_num IS
  2      'The identification number of a member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class_member.centre_id IS
  2      'The identification number that uniquely identifies the fitness centre';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class_member.class_num IS
  2      'The identification number of a class (not unique between centres)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class_member.classmem_paydate IS
  2      'The date that the class member paid for the class';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class_member.classmem_totalattend IS
  2      'The number of sessions that the class member has attended, for that particular class';

Comment created.

SQL> 
SQL> ALTER TABLE class_member
  2      ADD CONSTRAINT class_member_pk PRIMARY KEY ( member_num,
  3                                                   centre_id,
  4                                                   class_num );

Table CLASS_MEMBER altered.

SQL> 
SQL> CREATE TABLE class_staff (
  2      staff_id    NUMBER(7) NOT NULL,
  3      centre_id   NUMBER(7) NOT NULL,
  4      class_num   NUMBER(7) NOT NULL,
  5      class_lead  VARCHAR2(4) NOT NULL
  6  );

Table CLASS_STAFF created.

SQL> 
SQL> ALTER TABLE class_staff
  2      ADD CONSTRAINT check_classlead CHECK ( class_lead IN ( 'No', 'Yes' ) );

Table CLASS_STAFF altered.

SQL> 
SQL> COMMENT ON COLUMN class_staff.staff_id IS
  2      'The identification number of a staff member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class_staff.centre_id IS
  2      'The identification number that uniquely identifies the fitness centre';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class_staff.class_num IS
  2      'The identification number of a class (not unique between centres)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN class_staff.class_lead IS
  2      'Whether a staff member is the leader of the class or not, can only be: 
  3  Yes
  4  No';

Comment created.

SQL> 
SQL> ALTER TABLE class_staff
  2      ADD CONSTRAINT class_staff_pk PRIMARY KEY ( staff_id,
  3                                                  centre_id,
  4                                                  class_num );

Table CLASS_STAFF altered.

SQL> 
SQL> CREATE TABLE facility (
  2      fac_roomnum   NUMBER(7) NOT NULL,
  3      centre_id     NUMBER(7) NOT NULL,
  4      fac_name      VARCHAR2(25) NOT NULL,
  5      fac_desc      VARCHAR2(75) NOT NULL,
  6      fac_capacity  NUMBER(3) NOT NULL
  7  );

Table FACILITY created.

SQL> 
SQL> COMMENT ON COLUMN facility.fac_roomnum IS
  2      'The room number of the facility';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN facility.centre_id IS
  2      'The identification number that uniquely identifies the fitness centre';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN facility.fac_name IS
  2      'The name of the facility';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN facility.fac_desc IS
  2      'The description of the facility';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN facility.fac_capacity IS
  2      'The capacity of the facility (how many members can use the facility at once)';

Comment created.

SQL> 
SQL> ALTER TABLE facility ADD CONSTRAINT facility_pk PRIMARY KEY ( centre_id,
  2                                                                fac_roomnum );

Table FACILITY altered.

SQL> 
SQL> CREATE TABLE member (
  2      member_num       NUMBER(7) NOT NULL,
  3      member_fname     VARCHAR2(25) NOT NULL,
  4      member_lname     VARCHAR2(25) NOT NULL,
  5      member_street    VARCHAR2(50) NOT NULL,
  6      member_town      VARCHAR2(50) NOT NULL,
  7      member_postcode  VARCHAR2(8) NOT NULL,
  8      member_phone     VARCHAR2(12) NOT NULL,
  9      member_joindate  DATE NOT NULL,
 10      centre_id        NUMBER(7) NOT NULL,
 11      member_referrer  NUMBER(7)
 12  );

Table MEMBER created.

SQL> 
SQL> COMMENT ON COLUMN member.member_num IS
  2      'The identification number of a member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.member_fname IS
  2      'The first name of the member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.member_lname IS
  2      'The last name of the member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.member_street IS
  2      'The street that the member lives on';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.member_town IS
  2      'The town that the member lives in';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.member_postcode IS
  2      'The postcode of the members primary residence.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.member_phone IS
  2      'The phone number of the member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.member_joindate IS
  2      'The date that the member joined the business';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.centre_id IS
  2      'The identification number that uniquely identifies the fitness centre';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.member_referrer IS
  2      'The identification number of a member';

Comment created.

SQL> 
SQL> ALTER TABLE member ADD CONSTRAINT member_pk PRIMARY KEY ( member_num );

Table MEMBER altered.

SQL> 
SQL> CREATE TABLE session_attendance (
  2      sessionattnd_num      NUMBER(7) NOT NULL,
  3      member_num            NUMBER(7) NOT NULL,
  4      centre_id             NUMBER(7) NOT NULL,
  5      class_num             NUMBER(7) NOT NULL,
  6      session_date          DATE NOT NULL,
  7      session_attendstatus  VARCHAR2(10) NOT NULL
  8  );

Table SESSION_ATTENDANCE created.

SQL> 
SQL> ALTER TABLE session_attendance
  2      ADD CONSTRAINT check_ifattended CHECK ( session_attendstatus IN ( 'Absent', 'Attended' ) );

Table SESSION_ATTENDANCE altered.

SQL> 
SQL> COMMENT ON COLUMN session_attendance.sessionattnd_num IS
  2      'Surrogate key of session attendance (of members)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN session_attendance.member_num IS
  2      'The identification number of a member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN session_attendance.centre_id IS
  2      'The identification number that uniquely identifies the fitness centre';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN session_attendance.class_num IS
  2      'The identification number of a class (not unique between centres)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN session_attendance.session_date IS
  2      'The date of the particular session';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN session_attendance.session_attendstatus IS
  2      'Whether or not the class member attended this particular session of the class, can only be:
  3  Attended
  4  Absent';

Comment created.

SQL> 
SQL> ALTER TABLE session_attendance ADD CONSTRAINT session_attendance_pk PRIMARY KEY (
  2  sessionattnd_num );

Table SESSION_ATTENDANCE altered.

SQL> 
SQL> ALTER TABLE session_attendance
  2      ADD CONSTRAINT session_attendance_nk UNIQUE ( member_num,
  3                                                    centre_id,
  4                                                    class_num,
  5                                                    session_date );

Table SESSION_ATTENDANCE altered.

SQL> 
SQL> CREATE TABLE staff (
  2      staff_id         NUMBER(7) NOT NULL,
  3      staff_fname      VARCHAR2(25) NOT NULL,
  4      staff_lname      VARCHAR2(25) NOT NULL,
  5      staff_phone      VARCHAR2(15) NOT NULL,
  6      staff_startdate  DATE NOT NULL,
  7      staff_role       CHAR(1) NOT NULL,
  8      staff_firstaid   VARCHAR2(4) NOT NULL,
  9      centre_id        NUMBER(7) NOT NULL
 10  );

Table STAFF created.

SQL> 
SQL> ALTER TABLE staff
  2      ADD CONSTRAINT fixed_staff_roles CHECK ( staff_role IN ( 'A', 'C', 'D', 'M', 'P',
  3                                                               'S', 'T' ) );

Table STAFF altered.

SQL> 
SQL> ALTER TABLE staff
  2      ADD CONSTRAINT check_firstaid CHECK ( staff_firstaid IN ( 'No', 'Yes' ) );

Table STAFF altered.

SQL> 
SQL> COMMENT ON COLUMN staff.staff_id IS
  2      'The identification number of a staff member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN staff.staff_fname IS
  2      'The first name of a staff member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN staff.staff_lname IS
  2      'The last name of a staff member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN staff.staff_phone IS
  2      'The mobile number of a staff member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN staff.staff_startdate IS
  2      'The start date of a staff member (when they began working at that fitness centre)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN staff.staff_role IS
  2      'The role of the staff member at the fitness centre, can only be: 
  3  Administration (A)
  4  Cleaner (C)
  5  Instructor Dry (D)
  6  Instructor Pool (P)
  7  Manager (only one per centre) (M)
  8  Sales (S)
  9  Security (T)';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN staff.staff_firstaid IS
  2      'Whether or not a staff member is first aid certified, can only be:
  3  Yes
  4  No';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN staff.centre_id IS
  2      'The identification number that uniquely identifies the fitness centre';

Comment created.

SQL> 
SQL> ALTER TABLE staff ADD CONSTRAINT staff_pk PRIMARY KEY ( staff_id );

Table STAFF altered.

SQL> 
SQL> ALTER TABLE facility
  2      ADD CONSTRAINT centre_facility FOREIGN KEY ( centre_id )
  3          REFERENCES centre ( centre_id );

Table FACILITY altered.

SQL> 
SQL> ALTER TABLE member
  2      ADD CONSTRAINT centre_member FOREIGN KEY ( centre_id )
  3          REFERENCES centre ( centre_id );

Table MEMBER altered.

SQL> 
SQL> ALTER TABLE staff
  2      ADD CONSTRAINT centre_staff FOREIGN KEY ( centre_id )
  3          REFERENCES centre ( centre_id );

Table STAFF altered.

SQL> 
SQL> ALTER TABLE session_attendance
  2      ADD CONSTRAINT clasmem_sessionattend FOREIGN KEY ( member_num,
  3                                                         centre_id,
  4                                                         class_num )
  5          REFERENCES class_member ( member_num,
  6                                    centre_id,
  7                                    class_num );

Table SESSION_ATTENDANCE altered.

SQL> 
SQL> ALTER TABLE class_staff
  2      ADD CONSTRAINT class_classstaff FOREIGN KEY ( centre_id,
  3                                                    class_num )
  4          REFERENCES class ( centre_id,
  5                             class_num );

Table CLASS_STAFF altered.

SQL> 
SQL> ALTER TABLE class
  2      ADD CONSTRAINT classcategory_class FOREIGN KEY ( class_typeid )
  3          REFERENCES class_category ( class_typeid );

Table CLASS altered.

SQL> 
SQL> ALTER TABLE class
  2      ADD CONSTRAINT facility_class FOREIGN KEY ( centre_id,
  3                                                  fac_roomnum )
  4          REFERENCES facility ( centre_id,
  5                                fac_roomnum );

Table CLASS altered.

SQL> 
SQL> ALTER TABLE assessment
  2      ADD CONSTRAINT member_assessment FOREIGN KEY ( member_num )
  3          REFERENCES member ( member_num );

Table ASSESSMENT altered.

SQL> 
SQL> ALTER TABLE member
  2      ADD CONSTRAINT member_member FOREIGN KEY ( member_referrer )
  3          REFERENCES member ( member_num );

Table MEMBER altered.

SQL> 
SQL> ALTER TABLE class_member
  2      ADD CONSTRAINT member_memberclass FOREIGN KEY ( member_num )
  3          REFERENCES member ( member_num );

Table CLASS_MEMBER altered.

SQL> 
SQL> ALTER TABLE class_member
  2      ADD CONSTRAINT relation_7 FOREIGN KEY ( centre_id,
  3                                              class_num )
  4          REFERENCES class ( centre_id,
  5                             class_num );

Table CLASS_MEMBER altered.

SQL> 
SQL> ALTER TABLE assessment
  2      ADD CONSTRAINT staff_assessment FOREIGN KEY ( staff_id )
  3          REFERENCES staff ( staff_id );

Table ASSESSMENT altered.

SQL> 
SQL> ALTER TABLE class_staff
  2      ADD CONSTRAINT staff_classstaff FOREIGN KEY ( staff_id )
  3          REFERENCES staff ( staff_id );

Table CLASS_STAFF altered.

SQL> 
SQL> 
SQL> 
SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                            10
SQL> -- CREATE INDEX                             0
SQL> -- ALTER TABLE                             28
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           0
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          0
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE MATERIALIZED VIEW LOG             0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- TSDP POLICY                              0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   0
SQL> -- WARNINGS                                 0
SQL> 
SQL> SPOOL off
