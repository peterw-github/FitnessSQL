-- Generated by Oracle SQL Developer Data Modeler 20.4.0.374.0801
--   at:        2021-09-15 11:00:49 AEST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c

--author name: Peter Wotherspoon Bustamante

-- Captured run of script in file called logicalmodel_schema_output.txt

set echo on
SPOOL logicalmodel_schema_output.txt


DROP TABLE assessment CASCADE CONSTRAINTS;

DROP TABLE centre CASCADE CONSTRAINTS;

DROP TABLE class CASCADE CONSTRAINTS;

DROP TABLE class_category CASCADE CONSTRAINTS;

DROP TABLE class_member CASCADE CONSTRAINTS;

DROP TABLE class_staff CASCADE CONSTRAINTS;

DROP TABLE facility CASCADE CONSTRAINTS;

DROP TABLE member CASCADE CONSTRAINTS;

DROP TABLE session_attendance CASCADE CONSTRAINTS;

DROP TABLE staff CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE assessment (
    member_num        NUMBER(7) NOT NULL,
    assess_date       DATE NOT NULL,
    assess_weight     NUMBER(7) NOT NULL,
    assess_systolic   NUMBER(7) NOT NULL,
    assess_diastolic  NUMBER(7) NOT NULL,
    assess_bmi        NUMBER(7) NOT NULL,
    assess_v02max     NUMBER(7) NOT NULL,
    staff_id          NUMBER(7) NOT NULL
);

COMMENT ON COLUMN assessment.member_num IS
    'The identification number of a member';

COMMENT ON COLUMN assessment.assess_date IS
    'The date the assessment occurred.';

COMMENT ON COLUMN assessment.assess_weight IS
    'The weight of the assessed member';

COMMENT ON COLUMN assessment.assess_systolic IS
    'The systolic blood pressure of the assessed member';

COMMENT ON COLUMN assessment.assess_diastolic IS
    'The diastolic blood pressure of the assessed member';

COMMENT ON COLUMN assessment.assess_bmi IS
    'The BMI of the assessed member';

COMMENT ON COLUMN assessment.assess_v02max IS
    'The v02 max  of the assessed member (the maximum rate of oxygen consumption, while engaging in intensifying exercise)';

COMMENT ON COLUMN assessment.staff_id IS
    'The identification number of a staff member';

ALTER TABLE assessment ADD CONSTRAINT assessment_pk PRIMARY KEY ( member_num,
                                                                  assess_date );

CREATE TABLE centre (
    centre_id        NUMBER(7) NOT NULL,
    centre_name      VARCHAR2(50) NOT NULL,
    centre_street    VARCHAR2(25) NOT NULL,
    centre_town      VARCHAR2(30) NOT NULL,
    centre_postcode  VARCHAR2(15) NOT NULL,
    centre_phone     VARCHAR2(15) NOT NULL
);

COMMENT ON COLUMN centre.centre_id IS
    'The identification number that uniquely identifies the fitness centre';

COMMENT ON COLUMN centre.centre_name IS
    'The name of the fitness centre ';

COMMENT ON COLUMN centre.centre_street IS
    'The street that the fitness centre is on';

COMMENT ON COLUMN centre.centre_town IS
    'The town the fitness centre is in';

COMMENT ON COLUMN centre.centre_postcode IS
    'The postcode of the fitness centre';

COMMENT ON COLUMN centre.centre_phone IS
    'The phone number of the fitness centre';

ALTER TABLE centre ADD CONSTRAINT centre_pk PRIMARY KEY ( centre_id );

CREATE TABLE class (
    class_num        NUMBER(7) NOT NULL,
    centre_id        NUMBER(7) NOT NULL,
    class_type       VARCHAR2(25) NOT NULL,
    class_desc       VARCHAR2(75) NOT NULL,
    class_duration   NUMBER(4) NOT NULL,
    class_startdate  DATE,
    class_max        NUMBER(4) NOT NULL,
    class_sessions   NUMBER(3) NOT NULL,
    class_cost       NUMBER(7, 2) NOT NULL,
    class_gender     VARCHAR2(25) NOT NULL,
    fac_roomnum      NUMBER(7) NOT NULL,
    class_typeid     NUMBER(7) NOT NULL
);

COMMENT ON COLUMN class.class_num IS
    'The identification number of a class (not unique between centres)';

COMMENT ON COLUMN class.centre_id IS
    'The identification number that uniquely identifies the fitness centre';

COMMENT ON COLUMN class.class_type IS
    'The type/category that the class falls into.';

COMMENT ON COLUMN class.class_desc IS
    'The description of the class';

COMMENT ON COLUMN class.class_duration IS
    'The duration of the class (in minutes)';

COMMENT ON COLUMN class.class_startdate IS
    'The date and time of the start of the first session of the class ';

COMMENT ON COLUMN class.class_max IS
    'The maximum number of people that can participate in a class';

COMMENT ON COLUMN class.class_sessions IS
    'The total number of sessions that a class has';

COMMENT ON COLUMN class.class_cost IS
    'The cost of the class to a member (sessions cannot be bought individually)';

COMMENT ON COLUMN class.class_gender IS
    'States which gender the class is exclusive to, can only be:
Female
Male
Unrestricted
Unknown
';

COMMENT ON COLUMN class.fac_roomnum IS
    'The room number of the facility';

COMMENT ON COLUMN class.class_typeid IS
    'The identification number of the class type';

ALTER TABLE class ADD CONSTRAINT class_pk PRIMARY KEY ( centre_id,
                                                        class_num );

CREATE TABLE class_category (
    class_typeid  NUMBER(7) NOT NULL,
    class_type    VARCHAR2(25) NOT NULL
);

COMMENT ON COLUMN class_category.class_typeid IS
    'The identification number of the class type';

COMMENT ON COLUMN class_category.class_type IS
    'The name of the type of class';

ALTER TABLE class_category ADD CONSTRAINT class_category_pk PRIMARY KEY ( class_typeid );

CREATE TABLE class_member (
    member_num            NUMBER(7) NOT NULL,
    centre_id             NUMBER(7) NOT NULL,
    class_num             NUMBER(7) NOT NULL,
    classmem_paydate      DATE NOT NULL,
    classmem_totalattend  NUMBER(4) NOT NULL
);

COMMENT ON COLUMN class_member.member_num IS
    'The identification number of a member';

COMMENT ON COLUMN class_member.centre_id IS
    'The identification number that uniquely identifies the fitness centre';

COMMENT ON COLUMN class_member.class_num IS
    'The identification number of a class (not unique between centres)';

COMMENT ON COLUMN class_member.classmem_paydate IS
    'The date that the class member paid for the class';

COMMENT ON COLUMN class_member.classmem_totalattend IS
    'The number of sessions that the class member has attended, for that particular class';

ALTER TABLE class_member
    ADD CONSTRAINT class_member_pk PRIMARY KEY ( member_num,
                                                 centre_id,
                                                 class_num );

CREATE TABLE class_staff (
    staff_id    NUMBER(7) NOT NULL,
    centre_id   NUMBER(7) NOT NULL,
    class_num   NUMBER(7) NOT NULL,
    class_lead  VARCHAR2(4) NOT NULL
);

ALTER TABLE class_staff
    ADD CONSTRAINT check_classlead CHECK ( class_lead IN ( 'No', 'Yes' ) );

COMMENT ON COLUMN class_staff.staff_id IS
    'The identification number of a staff member';

COMMENT ON COLUMN class_staff.centre_id IS
    'The identification number that uniquely identifies the fitness centre';

COMMENT ON COLUMN class_staff.class_num IS
    'The identification number of a class (not unique between centres)';

COMMENT ON COLUMN class_staff.class_lead IS
    'Whether a staff member is the leader of the class or not, can only be: 
Yes
No';

ALTER TABLE class_staff
    ADD CONSTRAINT class_staff_pk PRIMARY KEY ( staff_id,
                                                centre_id,
                                                class_num );

CREATE TABLE facility (
    fac_roomnum   NUMBER(7) NOT NULL,
    centre_id     NUMBER(7) NOT NULL,
    fac_name      VARCHAR2(25) NOT NULL,
    fac_desc      VARCHAR2(75) NOT NULL,
    fac_capacity  NUMBER(3) NOT NULL
);

COMMENT ON COLUMN facility.fac_roomnum IS
    'The room number of the facility';

COMMENT ON COLUMN facility.centre_id IS
    'The identification number that uniquely identifies the fitness centre';

COMMENT ON COLUMN facility.fac_name IS
    'The name of the facility';

COMMENT ON COLUMN facility.fac_desc IS
    'The description of the facility';

COMMENT ON COLUMN facility.fac_capacity IS
    'The capacity of the facility (how many members can use the facility at once)';

ALTER TABLE facility ADD CONSTRAINT facility_pk PRIMARY KEY ( centre_id,
                                                              fac_roomnum );

CREATE TABLE member (
    member_num       NUMBER(7) NOT NULL,
    member_fname     VARCHAR2(25) NOT NULL,
    member_lname     VARCHAR2(25) NOT NULL,
    member_street    VARCHAR2(50) NOT NULL,
    member_town      VARCHAR2(50) NOT NULL,
    member_postcode  VARCHAR2(8) NOT NULL,
    member_phone     VARCHAR2(12) NOT NULL,
    member_joindate  DATE NOT NULL,
    centre_id        NUMBER(7) NOT NULL,
    member_referrer  NUMBER(7)
);

COMMENT ON COLUMN member.member_num IS
    'The identification number of a member';

COMMENT ON COLUMN member.member_fname IS
    'The first name of the member';

COMMENT ON COLUMN member.member_lname IS
    'The last name of the member';

COMMENT ON COLUMN member.member_street IS
    'The street that the member lives on';

COMMENT ON COLUMN member.member_town IS
    'The town that the member lives in';

COMMENT ON COLUMN member.member_postcode IS
    'The postcode of the members primary residence.';

COMMENT ON COLUMN member.member_phone IS
    'The phone number of the member';

COMMENT ON COLUMN member.member_joindate IS
    'The date that the member joined the business';

COMMENT ON COLUMN member.centre_id IS
    'The identification number that uniquely identifies the fitness centre';

COMMENT ON COLUMN member.member_referrer IS
    'The identification number of a member';

ALTER TABLE member ADD CONSTRAINT member_pk PRIMARY KEY ( member_num );

CREATE TABLE session_attendance (
    sessionattnd_num      NUMBER(7) NOT NULL,
    member_num            NUMBER(7) NOT NULL,
    centre_id             NUMBER(7) NOT NULL,
    class_num             NUMBER(7) NOT NULL,
    session_date          DATE NOT NULL,
    session_attendstatus  VARCHAR2(10) NOT NULL
);

ALTER TABLE session_attendance
    ADD CONSTRAINT check_ifattended CHECK ( session_attendstatus IN ( 'Absent', 'Attended' ) );

COMMENT ON COLUMN session_attendance.sessionattnd_num IS
    'Surrogate key of session attendance (of members)';

COMMENT ON COLUMN session_attendance.member_num IS
    'The identification number of a member';

COMMENT ON COLUMN session_attendance.centre_id IS
    'The identification number that uniquely identifies the fitness centre';

COMMENT ON COLUMN session_attendance.class_num IS
    'The identification number of a class (not unique between centres)';

COMMENT ON COLUMN session_attendance.session_date IS
    'The date of the particular session';

COMMENT ON COLUMN session_attendance.session_attendstatus IS
    'Whether or not the class member attended this particular session of the class, can only be:
Attended
Absent';

ALTER TABLE session_attendance ADD CONSTRAINT session_attendance_pk PRIMARY KEY (
sessionattnd_num );

ALTER TABLE session_attendance
    ADD CONSTRAINT session_attendance_nk UNIQUE ( member_num,
                                                  centre_id,
                                                  class_num,
                                                  session_date );

CREATE TABLE staff (
    staff_id         NUMBER(7) NOT NULL,
    staff_fname      VARCHAR2(25) NOT NULL,
    staff_lname      VARCHAR2(25) NOT NULL,
    staff_phone      VARCHAR2(15) NOT NULL,
    staff_startdate  DATE NOT NULL,
    staff_role       CHAR(1) NOT NULL,
    staff_firstaid   VARCHAR2(4) NOT NULL,
    centre_id        NUMBER(7) NOT NULL
);

ALTER TABLE staff
    ADD CONSTRAINT fixed_staff_roles CHECK ( staff_role IN ( 'A', 'C', 'D', 'M', 'P',
                                                             'S', 'T' ) );

ALTER TABLE staff
    ADD CONSTRAINT check_firstaid CHECK ( staff_firstaid IN ( 'No', 'Yes' ) );

COMMENT ON COLUMN staff.staff_id IS
    'The identification number of a staff member';

COMMENT ON COLUMN staff.staff_fname IS
    'The first name of a staff member';

COMMENT ON COLUMN staff.staff_lname IS
    'The last name of a staff member';

COMMENT ON COLUMN staff.staff_phone IS
    'The mobile number of a staff member';

COMMENT ON COLUMN staff.staff_startdate IS
    'The start date of a staff member (when they began working at that fitness centre)';

COMMENT ON COLUMN staff.staff_role IS
    'The role of the staff member at the fitness centre, can only be: 
Administration (A)
Cleaner (C)
Instructor Dry (D)
Instructor Pool (P)
Manager (only one per centre) (M)
Sales (S)
Security (T)';

COMMENT ON COLUMN staff.staff_firstaid IS
    'Whether or not a staff member is first aid certified, can only be:
Yes
No';

COMMENT ON COLUMN staff.centre_id IS
    'The identification number that uniquely identifies the fitness centre';

ALTER TABLE staff ADD CONSTRAINT staff_pk PRIMARY KEY ( staff_id );

ALTER TABLE facility
    ADD CONSTRAINT centre_facility FOREIGN KEY ( centre_id )
        REFERENCES centre ( centre_id );

ALTER TABLE member
    ADD CONSTRAINT centre_member FOREIGN KEY ( centre_id )
        REFERENCES centre ( centre_id );

ALTER TABLE staff
    ADD CONSTRAINT centre_staff FOREIGN KEY ( centre_id )
        REFERENCES centre ( centre_id );

ALTER TABLE session_attendance
    ADD CONSTRAINT clasmem_sessionattend FOREIGN KEY ( member_num,
                                                       centre_id,
                                                       class_num )
        REFERENCES class_member ( member_num,
                                  centre_id,
                                  class_num );

ALTER TABLE class_staff
    ADD CONSTRAINT class_classstaff FOREIGN KEY ( centre_id,
                                                  class_num )
        REFERENCES class ( centre_id,
                           class_num );

ALTER TABLE class
    ADD CONSTRAINT classcategory_class FOREIGN KEY ( class_typeid )
        REFERENCES class_category ( class_typeid );

ALTER TABLE class
    ADD CONSTRAINT facility_class FOREIGN KEY ( centre_id,
                                                fac_roomnum )
        REFERENCES facility ( centre_id,
                              fac_roomnum );

ALTER TABLE assessment
    ADD CONSTRAINT member_assessment FOREIGN KEY ( member_num )
        REFERENCES member ( member_num );

ALTER TABLE member
    ADD CONSTRAINT member_member FOREIGN KEY ( member_referrer )
        REFERENCES member ( member_num );

ALTER TABLE class_member
    ADD CONSTRAINT member_memberclass FOREIGN KEY ( member_num )
        REFERENCES member ( member_num );

ALTER TABLE class_member
    ADD CONSTRAINT relation_7 FOREIGN KEY ( centre_id,
                                            class_num )
        REFERENCES class ( centre_id,
                           class_num );

ALTER TABLE assessment
    ADD CONSTRAINT staff_assessment FOREIGN KEY ( staff_id )
        REFERENCES staff ( staff_id );

ALTER TABLE class_staff
    ADD CONSTRAINT staff_classstaff FOREIGN KEY ( staff_id )
        REFERENCES staff ( staff_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            10
-- CREATE INDEX                             0
-- ALTER TABLE                             28
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0

SPOOL off
set echo off
